# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and Analyze SonarCloud
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dir: ['quiz-introduction-to-spring-framework',
              'quiz-spring-application-configuration',
              'quiz-spring-advanced-configuration',
              'quiz-spring-boot',
              'bookstore-spring-jdbc',
              'bookstore-spring-orm-jpa',
              'bookstore-spring-data-jpa']

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: BUILD AND SCAN <--- ${{ matrix.dir }} --->
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd ${{ matrix.dir }} 
          ./mvnw  verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=${{ matrix.dir }} \
          -Dsonar.coverage.jacoco.xmlReportPaths=/target/jacoco-report/jacoco.xml 
